// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var e,t;e=this,t=function(){"use strict";var e="function"==typeof Object.defineProperty?Object.defineProperty:null,t=Object.defineProperty,r=Object.prototype,o=r.toString,n=r.__defineGetter__,l=r.__defineSetter__,i=r.__lookupGetter__,u=r.__lookupSetter__,c=function(){try{return e({},"x",{}),!0}catch(e){return!1}}()?t:function(e,t,c){var a,f,y,p;if("object"!=typeof e||null===e||"[object Array]"===o.call(e))throw new TypeError("invalid argument. First argument must be an object. Value: `"+e+"`.");if("object"!=typeof c||null===c||"[object Array]"===o.call(c))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+c+"`.");if((f="value"in c)&&(i.call(e,t)||u.call(e,t)?(a=e.__proto__,e.__proto__=r,delete e[t],e[t]=c.value,e.__proto__=a):e[t]=c.value),y="get"in c,p="set"in c,f&&(y||p))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return y&&n&&n.call(e,t,c.get),p&&l&&l.call(e,t,c.set),e};function a(e,t,r){c(e,t,{configurable:!1,enumerable:!1,writable:!1,value:r})}function f(e){return"number"==typeof e}var y="function"==typeof Symbol&&"symbol"==typeof Symbol("foo");function p(){return y&&"symbol"==typeof Symbol.toStringTag}var b=Object.prototype.toString,s=Object.prototype.hasOwnProperty;function d(e,t){return null!=e&&s.call(e,t)}var m="function"==typeof Symbol?Symbol.toStringTag:"",_=p()?function(e){var t,r,o;if(null==e)return b.call(e);r=e[m],t=d(e,m);try{e[m]=void 0}catch(t){return b.call(e)}return o=b.call(e),t?e[m]=r:delete e[m],o}:function(e){return b.call(e)},v=Number,g=v.prototype.toString,h=p();function S(e){return"object"==typeof e&&(e instanceof v||(h?function(e){try{return g.call(e),!0}catch(e){return!1}}(e):"[object Number]"===_(e)))}function j(e){return f(e)||S(e)}function w(e){return e!=e}a(j,"isPrimitive",f),a(j,"isObject",S);var T="function"==typeof Symbol&&"symbol"==typeof Symbol("foo")&&d(Symbol,"iterator")&&"symbol"==typeof Symbol.iterator?Symbol.iterator:null,O=Math.ceil;function E(){var e,t=arguments,r=t[0],o="https://stdlib.io/e/"+r+"?";for(e=1;e<t.length;e++)o+="&arg[]="+encodeURIComponent(t[e]);return o}return function e(t,r,o){var n,l,i,u,c;if(!f(t)||w(t))throw new TypeError(E("0CT4M",t));if(!f(r)||w(r))throw new TypeError(E("0CT4N",r));if(arguments.length>2){if(!f(o)||w(o))throw new TypeError(E("0CT4O",o));l=o}else l=1;return u=O((r-t)/l),c=-1,a(n={},"next",y),a(n,"return",p),T&&a(n,T,b),n;function y(){return c+=1,i||c>=u?{done:!0}:{value:t+c*l,done:!1}}function p(e){return i=!0,arguments.length?{value:e,done:!0}:{done:!0}}function b(){return e(t,r,l)}}},"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).iterIncrspace=t();
//# sourceMappingURL=index.js.map
